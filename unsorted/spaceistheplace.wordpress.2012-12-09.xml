<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress.com" created="2012-12-09 15:55"-->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>space is the place</title>
	<link>http://fredsix.wordpress.com</link>
	<description></description>
	<pubDate>Sun, 09 Dec 2012 15:55:18 +0000</pubDate>
	<language>en</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://wordpress.com/</wp:base_site_url>
	<wp:base_blog_url>http://fredsix.wordpress.com</wp:base_blog_url>

	<wp:author><wp:author_id>25949232</wp:author_id><wp:author_login>fredsix</wp:author_login><wp:author_email>fredsix66@gmail.com</wp:author_email><wp:author_display_name><![CDATA[fredsix]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>


	<generator>http://wordpress.com/</generator>
<cloud domain='fredsix.wordpress.com' port='80' path='/?rsscloud=notify' registerProcedure='' protocol='http-post' />
<image>
		<url>http://s2.wp.com/i/buttonw-com.png</url>
		<title>space is the placespace is the place</title>
		<link>http://fredsix.wordpress.com</link>
	</image>
	<atom:link rel="search" type="application/opensearchdescription+xml" href="http://fredsix.wordpress.com/osd.xml" title="space is the place" />
	<atom:link rel='hub' href='http://fredsix.wordpress.com/?pushpress=hub'/>

	<item>
		<title>products and co-products</title>
		<link>http://fredsix.wordpress.com/?p=48</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>fredsix</dc:creator>
		<guid isPermaLink="false">http://fredsix.wordpress.com/?p=48</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>48</wp:post_id>
		<wp:post_date>2012-10-21 02:47:08</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>superawesome</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[25949232]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Models and the natural transformations between them</title>
		<link>http://fredsix.wordpress.com/?p=49</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>fredsix</dc:creator>
		<guid isPermaLink="false">http://fredsix.wordpress.com/?p=49</guid>
		<description></description>
		<content:encoded><![CDATA[This post is based on sections 4.1 &amp; 4.2 of Barr and Wells, <em>Category theory for computing science</em>
Some preliminary definitions:

<strong>Quiver </strong>- Directed multigraph. See <a href="http://ncatlab.org/nlab/show/quiver">http://ncatlab.org/nlab/show/quiver</a> . Barr&amp;Wells call this a "graph"

<strong>Diagram </strong>- A quiver homomorphism.

<strong>Commuting diagram </strong>- A quiver homomorphism (diagram) where the target quiver is the underlying graph of a category and where for any two points in the source graph, any two different paths between them get mapped (via the diagram) to two paths in the underlying graph that commute in the category.

<strong>Model</strong> - A diagram (not necessarily commutative) from a quiver G to (the underlying graph of) <strong>Set</strong>. Barr &amp; Wells invent, as an example of a model, a "u-structure", which is a set equipped with a unary function on the S. Then a diagram from a graph with one node and a self-arrow to the category <strong>Set</strong> is a "u-structure", so  the diagram is called a <strong>model</strong> of a u-structure. They later broaden this definition from <strong>Set</strong> to any category.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>49</wp:post_id>
		<wp:post_date>2012-10-21 22:00:49</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>superawesome</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[25949232]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rings and fields and divisors and other poorly organized topics</title>
		<link>http://fredsix.wordpress.com/2012/11/15/rings-and-fields-and-divisors-and-other-poorly-organized-topics/</link>
		<pubDate>Thu, 15 Nov 2012 03:23:46 +0000</pubDate>
		<dc:creator>fredsix</dc:creator>
		<guid isPermaLink="false">http://fredsix.wordpress.com/?p=52</guid>
		<description></description>
		<content:encoded><![CDATA[Reading Curtis' <em>Abstract Linear Algebra</em>, which is good so far except that he gives an incorrect definition of a field. He says that a field is a set F with two binary operations such that:
<ul>
	<li>one of the operations forms an abelian group with F</li>
	<li>the other operation forms an abelian group with $latex F - {0}$, where $latex 0$ is the additive identity of the first group</li>
	<li>For all a,b,c in F, $latex a(b + c) = ab + ac$ (distributivity)</li>
</ul>
The problem is there's no way (that I see) to prove the other way for distributivity: $latex (b + c)a = bc + ac$. To prove this you seem to need to prove that $latex 0a = 0$ for all $latex a$. You can prove  $latex a0 = 0$, but $latex 0a \neq 0$ is perfectly consistent with the above field axioms. Check it out:

If for some nonzero $latex a, b \in F$, $latex 0a = b$, then $latex 0b = 0(0a) = (00)a = 0a = b$. (The third equality holds because you<em> can </em>prove that for any $latex a$, $latex a0 = 0$). So $latex 01 = 0(bb^{-1}) = (0b)b^{-1} = bb^{-1} = 1$. Now we can do nasty things, like $latex a = a1 = a(01) = (a0)1 = 01$, so every nonzero element is now equal to 1. Why doesn't the last argument work to show $latex 0 = 1$? Because 0 is not in the multiplicative abelian group, so we dont have any guarantees on whether it interacts with the multiplicative identity. So we get a single strange "field" with only two elements, where multiplication by zero isnt actually commutative.

Even though this is pathological, I can't find a contradiction, so I can only assume that we need another axiom for distributivity the other way. I notice that every other definition I can find of fields posits distributivity both ways, so I can only assume that this is necessary and not just for convenience.
We can easily get a perfectly good definition by saying a field is a commutative ring where nonzero elements have multiplicative inverses.
But since I've never studied ring theory in depth, I need to remember what rings are first! A ring is a set R equipped with two binary operations, + and *, such that (R, +) is an abelian group, (R, *) is a monoid, and * distributes over +:
<ul>
	<li>a(b + c) = ab + ac</li>
	<li>(a + b)c = ac + bc</li>
</ul>
A commutative ring is a ring where the monoid is commutative!

Actually, it's not enough to specify that a field is a commutative ring where non-zero elements have multiplicative inverses. That fact is enough to prove that there are no zero divisors, which we definitely want since fields should behave like we expect numbers to behave. If there are zero divisors, then zero can be <em>factored</em> into a product of non-zero elements, which is rather weird
So let's prove that first. We want to show that $latex ab=0$ implies $latex a = 0$ or $latex b = 0$. Assuming $latex a \neq 0$ (because if not, then we're immediately done), then $latex a$ has an inverse $latex a^{-1}$, so $latex b = 0 a^{-1} = 0$ because $latex 0x = (0 + 0)x = 0x + 0x$ for any x. So $latex b = 0$.

This actually doesn't rule out the trivial ring, as far as I see. The trivial ring has one element, $latex \epsilon = 0 = 1$, which forms the trivial abelian group with addition $latex \epsilon + \epsilon = \epsilon$. Basically the same definition nets us the trivial monoid over multiplication, and it's certainly commutative. So the trivial ring is a commutative ring, and there are no nonzero elements, so the condition for the existence of inverses is vacuously satisfied.

So our final definition for a field is: a commutative ring with $latex 0 \neq 1$ where each nonzero element has a multiplicative inverse.

All this thinking about rings and fields has got me juiced up about one example in particular. One canonical example of a ring is $latex \mathbb{Z}_m$, the integers modulo m. For which values of m is $latex \mathbb{Z}_m$ a field?

Spoiler alert: m needs to be prime. I had read this a few times before I actually took the time to understand why, but it's rather neat. For a commutative, non-trivial ring to be a field, we need to have multiplicative inverses for every nonzero element, i.e. for all positive integers from 1 to m-1.

Let's look at why this fails for $latex \mathbb{Z}_6$. We don't care about inverses for 0, and 1 already has one.
<ul>
	<li>2*1 = 2 mod 6 = 2</li>
	<li>2*2 = 4 mod 6 = 4</li>
	<li>2*3 = 6 mod 6 = 0</li>
	<li>2*4 = 8 mod 6 = 2</li>
	<li>2*5 = 10 mod 6 = 4</li>
</ul>
Immediately a problem is that $latex \mathbb{Z}_6$ has zero divisors (2 and 3). We explicitly ruled this out above, so it can't be a field. But aside from that...

Well, it's clear that for 2, there's an element, 3, for which the two multiply to m. But why does that guarantee that there's no element x for which 2x = 1 mod 6? Well, if some element $latex a$ has an inverse mod $latex m$ and $latex a \neq 1$, then it must, by the definition of integers modulo m, be some element $latex b$ such that $latex  a*b$ is some element greater than $latex m$ and which is 1 mod $latex m$. But in our case, there is no multiple of 2 that ever takes it to an element other than 1 = 2*1 and 4 = 2*2. After it gets to 2*3 = 0, we visit 2*4 = 2*1 = 1 and 2*5 = 2*2 = 4. In other words, 1 and 2 could not possibly be the inverse for 2, because neither forms a product with 2 that exceeds $latex m$ (in this case, 6). But for the inverse candidates (3, 4, 5), because 3*2 = 0, that determines that the other two candiates only hit points that the first two failed candidates hit.

Can we generalize this argument? I think so, but this  post has gotten too long..]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>52</wp:post_id>
		<wp:post_date>2012-11-15 03:23:46</wp:post_date>
		<wp:post_date_gmt>2012-11-15 03:23:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rings-and-fields-and-divisors-and-other-poorly-organized-topics</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>superawesome</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[25949232]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1352949828]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>geometry or whatever</title>
		<link>http://fredsix.wordpress.com/2012/11/15/geometry-or-whatever/</link>
		<pubDate>Thu, 15 Nov 2012 05:04:27 +0000</pubDate>
		<dc:creator>fredsix</dc:creator>
		<guid isPermaLink="false">http://fredsix.wordpress.com/?p=66</guid>
		<description></description>
		<content:encoded><![CDATA[From Moise' <em>Elementary Geometry from an Advanced Standpoint</em>

A <strong>pre-</strong><strong>geometry</strong> is a triple $latex (S, mathcal{L}, mathcal{P})$, where $latex mathcal{L}$, the set of lines, and $latex mathcal{P}$, the set of planes, are both subsets of the powerset of $latex S$, and which satisfies:
<ul>
	<li><strong>I-1 - </strong>Two distinct points have a unique line containing them</li>
	<li><strong>I-2 - </strong>For three distinct points not in a line, there's a unique plane containing them</li>
	<li><strong>I-3 -  </strong>For two distinct points in a plane, the line containing them is also contained in the plane</li>
	<li><strong>I-4 - </strong>The intersection of two planes is either empty or a line</li>
	<li><strong>I-5 - </strong>Every line has at least two points, every plane has at least 3 non-collinear points.  There are at least 3 non-collinear points and 4 non-coplanar points in the space.</li>
</ul>
<strong>Theorem 1. </strong>Two lines intersect in at most one point. Proof: For any two points a unique line contains them. So distinct lines  intersect at one point if they intersect at all.

<strong>Theorem 2. </strong>If a line intersects a plane that does not contain it, then it intersects at at most one point. Proof: this is the contrapositive of I-3

<strong>Theorem 3. </strong>Given a line and a point not in a line, there's a unique plane containing them. Proof: The line has two points. These two points are not collinear with the other point (the line is the only one containing the two points), so we have three collinear points. By I-2 there's a unique plane containing them.

We augment the above construction by giving the space a notion of distance. The way to do this is to assign to any pair of points a distance such that you can impose a "coordinate system" on every line. We want to use the reals for distance as a sort of ruler for a geometric space.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>66</wp:post_id>
		<wp:post_date>2012-11-15 05:04:27</wp:post_date>
		<wp:post_date_gmt>2012-11-15 05:04:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>geometry-or-whatever</wp:post_name>
		<wp:status>trash</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
			<wp:meta_value><![CDATA[draft]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
			<wp:meta_value><![CDATA[1353463463]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[25949232]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>superawesome</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Euclid&#039;s Elements, part 1</title>
		<link>http://fredsix.wordpress.com/2012/11/21/euclids-elements-part-1/</link>
		<pubDate>Wed, 21 Nov 2012 02:04:58 +0000</pubDate>
		<dc:creator>fredsix</dc:creator>
		<guid isPermaLink="false">http://fredsix.wordpress.com/?p=73</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>73</wp:post_id>
		<wp:post_date>2012-11-21 02:04:58</wp:post_date>
		<wp:post_date_gmt>2012-11-21 02:04:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>euclids-elements-part-1</wp:post_name>
		<wp:status>trash</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>superawesome</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[25949232]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
			<wp:meta_value><![CDATA[1354389236]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
			<wp:meta_value><![CDATA[draft]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Euclid&#039;s Elements, Book 1, part 1</title>
		<link>http://fredsix.wordpress.com/2012/11/21/euclids-elements-book-1-part-1/</link>
		<pubDate>Wed, 21 Nov 2012 04:02:50 +0000</pubDate>
		<dc:creator>fredsix</dc:creator>
		<guid isPermaLink="false">http://fredsix.wordpress.com/?p=74</guid>
		<description></description>
		<content:encoded><![CDATA[The postulates and propositions that Euclid deals in seem to come in two flavors: constructions and facts. It is interesting to note that three of Euclid's five postulates are construction postulates, while the last two, including the fifth, the infamous <em>parallel postulate</em>, are facts. I like to think of the constructions as subroutines you can execute.

<strong>Postulates</strong>
<ol>
	<li>Subroutine SLS(Point p1, Point p2) takes two points and produces a straight line segment</li>
	<li>Subroutine SL(LineSegment seg) takes a straight line segment and extends it to an infinite line containing the  line segment</li>
	<li>Subroutine Circ(LineSegment seg, Point p) takes a straight line segment and a point and creates a circle at the point with a radius equal to the length of the line segment</li>
	<li>All right angles are equal to each other</li>
	<li>If a straight line falls across two other straight lines and the resulting internal angles sum to less than two right angles, then extending these lines infinitely will result in the the lines meeting on the same side (i.e. the internal angles will form the base angles for a triangle).</li>
</ol>
I'm going to assume that you know what points, lines and circles are. The only thing you may be confused about is the definition of <em>right angle</em>, which is "angles that result when a straight line stands on another straight line and the adjacent angles that they form are equal". Postulate 4 then asserts that two pairs of right angles are all equal to one another.

Right then, let's prove some propositions.

<strong>1.1. Constructing an equilateral triangle from a given straight line segment</strong>
<pre>define EqTri(LineSegment seg):
    circ1 = Circ(seg, seg.p1)
    circ2 = Circ(seg, seg.p2)
    C = arbitrary point from intersection of circ1 and circ2.
    X = SLS(seg.p1, C)
    Y = SLS(seg.p2, C)
    return Tri(seg, X, Y)</pre>
(Note that I've assumed that a straight line segment has two c fields, p1 and p2, which I've implicitly assumed are the extremities of the line segment)

EqTri returns an equilateral triangle of which <code>seg</code> (say with extremity points A and B) forms one of the sides. To see this, note that C is seg's length from A and seg's length from B. Thus the returned triangle has each side equal to the length of seg.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>74</wp:post_id>
		<wp:post_date>2012-11-21 04:02:50</wp:post_date>
		<wp:post_date_gmt>2012-11-21 04:02:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>euclids-elements-book-1-part-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>superawesome</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[25949232]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1353470571]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Euclid’s Elements, Book 1, part 2</title>
		<link>http://fredsix.wordpress.com/2012/11/22/euclids-elements-book-1-part-2/</link>
		<pubDate>Thu, 22 Nov 2012 23:21:17 +0000</pubDate>
		<dc:creator>fredsix</dc:creator>
		<guid isPermaLink="false">http://fredsix.wordpress.com/?p=80</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>1.2 Given a point and a straight line segment, you can draw a straight line segment of equal length at the point</strong>
<pre>define MoveSLSToPoint(Point P, LineSegment seg):
    B = seg.p1
    C = seg.p2
    L = SLS(P, B)
    T = EqTri(L)
    Circ1 = Circ(seg, B)
    Z = the point of T that isn't B or C
    E = the point where LS(SLS(Z, B)) cuts Circ1
    Circ2 = Circ(SLS(Z,E), Z)
    F = the point where LS(SLS(Z,P)) cuts  Circ2
    return SLS(P, B)</pre>
The crux is that ZP and ZB are equal length since they are the sides of an equilateral triangle, and BE is  equal in length to our given segment BC by construction (the circle), so using ZE as the radius for a second circle, we get a line ZF which is equal in length to ZE by construction. Subtracting from ZP from ZF we get PF, which is equal to ZE - ZB = BE = BC. So we just moved the line to P.

<strong>1.3 Given two unequal lines, you can cut the greater off to the length of the lesser.</strong>
<pre>define CutOff(LineSegment greater, LineSegment lesser):
    M = MoveSLSToPoint(greater.p1, lesser)
    C = Circ(M, greater.p1)
    E = point where greater cuts C
    return SLS(greater.p1, E</pre>
We use 1.2 to move the lesser to one of the endpoints of the greater segment. Then we cut off a lesser-sized segment from greater using a circle.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>80</wp:post_id>
		<wp:post_date>2012-11-22 23:21:17</wp:post_date>
		<wp:post_date_gmt>2012-11-22 23:21:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>euclids-elements-book-1-part-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[25949232]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>superawesome</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1353626478]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Manifestations of completeness, part 1</title>
		<link>http://fredsix.wordpress.com/2012/11/26/manifestations-of-completeness-part-1/</link>
		<pubDate>Mon, 26 Nov 2012 02:07:43 +0000</pubDate>
		<dc:creator>fredsix</dc:creator>
		<guid isPermaLink="false">http://fredsix.wordpress.com/?p=91</guid>
		<description></description>
		<content:encoded><![CDATA[The following statements about the real numbers are actually equivalent:
<ul>
	<li><strong>Axiom of Completeness (AoC)</strong>- Every set bounded above has a least upper bound.</li>
	<li><strong>Nested Interval Property</strong> <strong>(NIP)</strong> - Every sequence of nested (nonempty) closed intervals has a non-empty intersection</li>
	<li><strong>Monotone Convergence Theorem (MCT)</strong> - Every bounded monotone sequence converges.</li>
	<li><strong>Bolzano-Weierstrass Theorem (BWT)</strong> - Every bounded sequence has a convergent subsequence</li>
	<li><strong>Cauchy Criterion (CC)</strong> - Every Cauchy sequence converges.</li>
</ul>
This post is the beginning of a sequence that will go through the standard sequence by assuming AoC and  proving the rest. Then I will prove enough converses to show that each statement implies the rest.

<strong>AoC =&gt; NIP:</strong>Given a sequence $latex (I_n)$ of nonempty closed intervals $latex [a_n, b_n]$ (i.e. the set $latex \{x | a_n \leq x \leq b_n\}$), if for all n $latex I_n \subseteq I_{n+1}$, then $latex \bigcap_n I_n$ is not empty.

<em>Proof:</em> Since we have the axiom of completeness at our disposal and not much else (other than the properties of the real numbers), the proof idea is simply to try to use that. So we need to find a set that's bounded above, then use AoC to obtain a least upper bound, then somehow use that to show that the intersection of the $latex I_n$'s is nonempty.

Nestedness means that $latex a_n \leq a_{n+1}$ and $latex b_n \geq b_{n+1}$, and by hypothesis ($latex [a_n, b_n]$ nonempty) we must have $latex a_n \leq b_n$. So for any $latex a_k$, for any $latex j \in \mathbb{N}$, if $latex j &lt; k$ then $latex a_k \leq b_k \leq b_j$, and if $latex j &gt; k$ then $latex a_k leq a_j \leq b_j$. So every right endpoint $latex b_j$ is greater than each left endpoint $latex a_k$.

Hence, if we form the set $latex A = \{ a_k : k \in \mathbb{N} \}$, then each $latex b_n$ is an upper bound. By AoC, A has a  least upper bound $latex x$. Since each right endpoint $latex b_n$ is an upper bound, x must minorize it (that is, $latex x \leq b_n$). Also $latex x$ is an upper bound of A, so it majorizes every $latex a_n \in A$. So $latex x$ is in every $latex I_n$, meaning it's in the intersection. QED.

We need some definitions before we state and prove the monotone convergence theorem.

A <strong>bounded sequence</strong> is a sequence that fits entirely within some ball around the origin -- it's a sequence for which there's some $latex M \in \mathbb{R}$ such that $latex \forall n | x_n | \leq M$.

A <strong>monotone increasing sequence</strong> is a sequence for which for all $latex n \in \mathbb{N}$, $latex a_n \leq a_{n+1}$. A <strong>monotone decreasing sequence</strong> is exactly what you think it is.

<strong>AoC =&gt; MCT:</strong> A bounded, monotone sequence converges.

<em>Proof: </em>If sequence $latex (a_n) $ is bounded above, then it has a least upper bound $latex x$ by AoC. The hunch is that this sequence converges to $latex x$ (assuming it's monotone increasing), which we prove as follows: there must be some $latex k$ such that $latex x - 1 &lt; a_k$ (if not, then $latex x - 1$ is an upper bound). All the  $latex n \geq k$ have $latex x_n \geq x_k$, a.k.a. $latex k$ acts, for any $latex \epsilon &gt; 1$, as the point in the sequence such that all terms of the sequence are in the epsilon ball around $latex x$ after $latex k$. We can make this work for arbitrary epsilon by finding an $latex n \in \mathbb{N}$ such that $latex \frac{1}{n} &lt; \epsilon$ (because the reals are archimedean) and finding a point greater than $latex x - \frac{1}{n}$. This puts all terms of the sequence after this point inside the epsilon ball around $latex x$, so the sequence converges to $latex x$.

An identical argument works for monotone decreasing sequences using lower bounds, provided that you've done the footwork to show that AoC implies that every set bounded below has a greatest lower bound. QED.

(Interesting sidebar: MCT allows you to prove that a monotone sequence converges iff it's bounded. It's quite easy to show that every convergent sequence is bounded (in particular, monotone sequences that converge are bounded!), and MCT furnishes the converse.)

Proof of the Bolzano-Weierstrass theorem is next, but I'm pushing it into the next post because I want to prove it in two different ways.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>91</wp:post_id>
		<wp:post_date>2012-11-26 02:07:43</wp:post_date>
		<wp:post_date_gmt>2012-11-26 02:07:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>manifestations-of-completeness-part-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>superawesome</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[25949232]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1353895663]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Manifestations of completeness, part 2 (two proofs of Bolzano-Weierstrass &amp; more)</title>
		<link>http://fredsix.wordpress.com/2012/11/26/manifestations-of-completeness-part-2-two-proofs-of-bolzano-weierstrass-more/</link>
		<pubDate>Mon, 26 Nov 2012 06:21:37 +0000</pubDate>
		<dc:creator>fredsix</dc:creator>
		<guid isPermaLink="false">http://fredsix.wordpress.com/?p=109</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>NIP =&gt; BWT:  </strong>A bounded sequence has a convergent subsequence.

<em>Proof: </em>If $latex (a_n)$ is bounded by M, then we set up the following construction: split $latex [-M, M]$ into $latex [-M, 0]$ and $latex [0, M]$ and set $latex I_1$ equal to one of the half intervals that contains infinitely many terms of the sequence. (There's definitely one, otherwise our infinite sequence is not so infinite. Perhaps both have infinitely many, in which case pick one arbitrarily.)

Now pick an $latex a_k \in I_1$. Set $latex a_{n_1} = a_k$. Consider the subsequence $latex T_k = (a_n)_{n &gt; k}$ of the first $latex k$ elements chopped off of our original sequence $latex (a_n)$ (think of $latex T_k$ as the tail sequence after the first $latex k$ elements).

Now do the damn thing again: Divide $latex I_1$ into closed half intervals and pick one half that contains infinitely many elements of $latex T_k$ and set it equal to $latex I_2$. Then select $latex a_{n_2} \in I_2$ which is in $latex T_{n_2}$.

Finally, the last step is to do this forever.

Do u c wat i did ther? I constructed a nested sequence of closed intervals, each of which is nonempty, also picking out a subsequence along the way, one term for each interval. I'd like to somehow prove that the subsequence I made converges to some limit. Thankfully I have the Nested Interval Property at my disposal, which should be handy. NIP says that there's some element $latex x$ in every single closed interval.

So why does the subsequence converge to $latex x$? First of all, is the thing we made actually a subsequence? Yes, the tail machine $latex T_n$ ensures that after picking some term, we only pick terms farther along in the original sequence. Now for any $latex \epsilon &gt; 0$,  we need to ensure there's a point after which the sequence never escapes the $latex \epsilon$-ball around $latex x$. But clearly our construction was designed to do that! Interval $latex I_k$ has a width of $latex \frac{M}{2^{k-1}}$, so $latex | a_{n_k} - x| \leq \frac{M}{2^{k-1}}$. So pick a $latex N$ such that $latex \frac{M}{2^{N-1}} &lt; \epsilon$ (in particular, just find a $latex \frac{1}{N} &lt; \frac{\epsilon}{2M} $ and take $latex I_{N+1}$. It's not the smallest, but $latex \frac{1}{2^N} &lt; \frac{1}{N}$, so it works.) All $latex n_k &gt; N$ have $latex a_{n_k}$ within $latex \epsilon$ of $latex x$ too, because they are in even smaller intervals. So $latex (a_{n_k}) \rightarrow x$. QED.

That was fun, but it turns out there's another way to prove Bolzano-Weieeiererierirstrass, this time using the monotone convergence theorem. Note that because the original sequence is bounded, any subsequence is clearly bounded too. So if we can find a monotone subsequence, then we have our convergence subsequence!

To prove this the second way, we need a lemma:

<strong>Lemma: </strong>Every sequence has a monotone subsequence.

<em>Proof: </em>Some terms in the sequence, called <strong>peaks</strong>, are strictly greater than every term in the sequence that follows. There are either infinitely many or finitely many of these in any sequence. If there are finitely many of them, after the last one, each term $latex a_j$ in the sequence is <em>not</em> a peak, so some $latex k &gt; j$ is such that $latex a_j \leq a_k$. Using these we have a monotone increasing subsequence.

Otherwise, there are infinitely many peaks. So pick one as $latex a_{n_1}$, then pick another, $latex a_{n_2}$. The first is a peak, so $latex a_{n_1} &gt; a_{n_2}$, and so on. This a monotone decreasing subsequence.

<strong>MCT =&gt; BWT: </strong>

We are nearly done proving our five manifestations from the Axiom of Completeness! Let's finish up with the Cauchy criterion. A definition:

A <strong>Cauchy sequence </strong>is a sequence $latex (a_n)$ such that for any $latex \epsilon &gt; 0$ there's a point in the sequence $latex N$ such that for all $m, n \geq N$, $latex |a_m - a_n| &lt; \epsilon$.

<strong>Lemma:</strong> Every convergent sequence is Cauchy.

<em>Proof: </em>If $latex (a_n) \rightarrow a$, then we can find an $latex N$ for which $latex n \geq N \implies |a_n - a| &lt; \frac{\epsilon}{2}$. So for all $latex m, n \geq N$, $latex |a_m - a_n | \leq |a_m - a| + |a_n - a| &lt; \epsilon$.

Cauchy sequences are sequences where the terms get arbitrarily close to one another. You can see that each convergent sequence is Cauchy, which is somewhat interesting, but who really cares, y'know? It would be something, however, if the converse were true as well. This would give us a useful tool for proving convergence without actually knowing the limit it converges toward.

Feigning ignorance for now, we aren't sure whether every Cauchy sequence converges. But if it did, we would expect the following lemma to be true, since its falsity would ruin our plans (because every convergent sequence is bounded):

<strong>Lemma: </strong>Every Cauchy sequence is bounded.

<em>Proof: </em>If $latex (a_n)$ is cauchy then for some $latex N$ all $latex m, n \geq N \implies |a_m - a_n| &lt; 1$. So for all $latex m \geq N$, $latex |a_m| &lt; |a_N| + 1$. So take $latex M = \max{|a_1|, ..., |a_{N-1}|, |a_N| + 1}$

<strong>BWT =&gt; CC: </strong>A sequence converges iff it is Cauchy.

<em>Proof: </em>Convergent =&gt; Cauchy was proven above. So we need to prove that Cauchy sequence $latex (a_n)$ converges. It's bounded by the lemma above, so by BWT it has a convergent subsequence $latex (a_{n_k}) \rightarrow a$.

To prove that $latex (a_n) \rightarrow a$, the idea is this: the subsequence converges, so we can get some of the sequence terms within $latex \frac{\epsilon}{2}$ of $latex a$. The original sequence is Cauchy though, so we can get <em>every </em>term within $latex \frac{\epsilon}{2}$ of one of subsequence terms. Then by triangle inequality every element is within $latex \epsilon$ of $latex a$.

More formally: there's an $latex N$ s.t. $latex n_k \geq N \implies |a_{n_k} - a| &lt; \frac{\epsilon}{2}$. By Cauchyness, there's an M such that $latex \forall m, n \geq M$, $latex |a_n - a_m| &lt; \frac{\epsilon}{2}$. So fix some $latex n_K \geq \max{M, N}$. Thus $latex |a_{n_K} - a| &lt; \frac{\epsilon}{2}$ and for all $latex n \geq n_K$, $latex |a_n - a_{n_K}| &lt; \frac{\epsilon}{2}$. By the triangle inequality we have our convergence. QED

We have just finished proving AoC =&gt; NIP, AoC =&gt; MCT, NIP=&gt; BWT, MCT =&gt; BWT, and BWT =&gt; CC. We started out on this whole crazy adventure wanting to prove the equivalence of all of these theorems. If we could prove that the Cauchy criterion implies the axiom of completeness, we'd be set. But barring that, we will need to pursue some other collection of converses to give us what we want.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>109</wp:post_id>
		<wp:post_date>2012-11-26 06:21:37</wp:post_date>
		<wp:post_date_gmt>2012-11-26 06:21:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>manifestations-of-completeness-part-2-two-proofs-of-bolzano-weierstrass-more</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[25949232]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>superawesome</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1353910899]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Manifestations of completeness, part 3</title>
		<link>http://fredsix.wordpress.com/2012/11/28/manifestations-of-completeness-part-3/</link>
		<pubDate>Wed, 28 Nov 2012 02:43:45 +0000</pubDate>
		<dc:creator>fredsix</dc:creator>
		<guid isPermaLink="false">http://fredsix.wordpress.com/?p=121</guid>
		<description></description>
		<content:encoded><![CDATA[Previously I speculated that if we could prove that the cauchy criterion implies the axiom of completeness then our equivalence proof would be done. After thinking about it for all of five seconds, I don't see an easy way. We shall have to proceed more tediously.

<strong>NIP =&gt; AoC</strong>

Given a set $latex A$ which has an upper bound $latex u$, we want to prove there's a <em>least </em>upper bound. The only tool we are to assume is the Nested Interval  Property. Let's try to <a href="http://justfuckingdoit.com">JFDI</a> and see what happens.

We have to construct some nested sequence of closed intervals, and the way NIP works is guaranteeing a nonempty intersection. So it seems clear that the least upper bound will be in the intersection. We can't just construct any old sequence either, because we want to eliminate every upper bound but the least one (notice that a constant sequence is technically nested, so the NIP in this case doesn't tell us anything).

So pick an element $latex a \in A$ and form the closed sequence $latex I_1 = [a, u]$. Let's try cutting it in half each time, as that should get rid of every upper bound but the least one. So form $latex [a, \frac{a+u}{2}]$ and $latex [\frac{a+u}{2}, u]$. $latex \frac{a+u}{2}$ is either an upper bound or not, so either the left half contains an element of $latex A$ and an upper bound or the right half does (but not both!). Set $latex I_2 = [a, \frac{a+u}{2}]$ if the former is true. If it's not true, then $latex \frac{a+u}{2}$ is not an upper bound so there's a $latex b \in [\frac{a+u}{2}, u]$ that's also in $latex A$. Set $latex I_2 = [b, u]$ in this case. (So we're potentially reducing by more than a half). Now repeat this

This is a nested sequence of closed intervals, and in each case the left endpoint is an element of A and the right endpoint is an upper bound of A. By NIP there's a nonempty intersection with $latex x$ in it. This element is an upper bound of $latex A$ because if not then some $latex c \in A$ is greater than $latex x$. But the length of the closed intervals goes to 0, so after some point the intervals are smaller than $latex c - x$, so both $latex x$ and $latex c$ can't be in the intervals after a point. But $latex x$ has to be in each one, so $latex c$ isn't in it, which means the right endpoint can't be an upper bound (since there's an element of A greater than the right endpoint), which contradicts the construction. So $latex x$ is an upper bound.

For similar reasons, $latex x$ must be the least upper bound. If not, there's an upper bound smaller, say $latex v &lt; x$, so after a point the intervals are less than $latex x - v$, meaning an upper bound of A is less than the left endpoint, so the intervals contain no elements of $latex A$.

So $latex x$ is the least upper bound of A. QED.

Moving right along...

<strong>BWT =&gt; MCT:</strong>

Given a bounded, monotone sequence $latex (a_n)$, we want to prove that it converges. By BWT, there's a subsequence $latex (a_{n_k}) \rightarrow a$, so we want to prove that $latex (a_n) \rightarrow a$ as well. If $latex (a_n)$ is monotone increasing, then because there's a $latex n_M$ such that $latex n_k \geq n_M \implies a - \epsilon &lt; a_{n_k} &lt; a + \epsilon$, for any $latex n \geq n_M$ we have $latex a - \epsilon &lt; a_n$. But we have to be able to find some term of the subsequence after the nth term, so there's a $latex n_j &gt; n$ which, by monotonicity, $latex a_{n_j} \geq a_n$, and $latex a_{n_j}$ is inside the epsilon ball around $latex a$ (because $latex (a_{n_k})$ converges), so we have $latex a_n \leq a_{n_j} &lt; a + \epsilon$. This proves that all the $latex a_n$ after $latex a_{n_M}$ are also in the  epsilon ball around $latex a$, so $latex (a_n) \rightarrow a$.

The proof goes through similarly if $latex (a_n)$ is monotone decreasing. QED.

We forge on to prove that  AoC, NIP, MCT, and BWT are equivalent! We've proved AoC implies the other 3, NIP implies AoC, and BWT implies MCT. The only missing component is MCT =&gt; NIP. (We could have skipped BWT =&gt; MCT, but that's no fun!)

<strong>MCT =&gt; NIP</strong>

Given a nested sequence of intervals $latex I_n = [a_n, b_n]$, the sequence $latex (a_n)$ is monotone and bounded. By MCT, it converges, and it's limit (call it $latex a$) must be  in the intersection of all $latex I_n$. For if not, there's a $latex k$ for which $latex a \notin I_k$. Because for all $latex n \geq k$ we have $latex a_n \geq a_k$, the sequence can not stay inside the $latex a - a_k$-ball around $latex a$. So it does not converge, contradicting MCT.

Thus, $latex a$ must actually be in the intersection. QED.

To complete:

<strong>CC =&gt; BWT
</strong>So we're to assume that a sequence converges iff it's Cauchy, and use it to prove that every bounded sequence has a convergent subsequence. Right off the bat we know that we can equivalently prove that any bounded sequence has a Cauchy subsequence, but is that easy to do?

We will try to adapt the orginal proof we used for  BWT (via NIP) by starting with a closed interval $latex [-M, M]$, dividing it into closed halves, and selecting a half with infinitely many terms of it and picking one of the terms arbitrarily. We set the interval as $latex I_1$ and the term as $latex a_{n_1}$, then we divide $latex I_1$ into halves and pick the half with infinitely many terms in it and pick a term in the "tail sequence" $latex T_(n_1)$ of terms of $latex (a_n)$ that come after $latex a_{n_1}$. To see that this subsequence is Cauchy, note that $latex a_{n_k}$ is in $latex I_k$, which has a length of $latex \frac{M}{2^{k-1}}$. So pick $latex k$ big enough for that length to be less than $latex \epsilon$. Since the intervals just get smaller (by half each time), all subsequent terms fit inside $latex I_k$, so they're all within an $latex \epsilon$ of each other. QED.

We have now proven that the five statements are equivalent expressions of completeness. So, ah, ya heard.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>121</wp:post_id>
		<wp:post_date>2012-11-28 02:43:45</wp:post_date>
		<wp:post_date_gmt>2012-11-28 02:43:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>manifestations-of-completeness-part-3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[25949232]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>superawesome</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1354070626]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>&quot;Eventually&quot; &amp; the Order limit theorem</title>
		<link>http://fredsix.wordpress.com/2012/12/01/eventually-the-order-limit-theorem/</link>
		<pubDate>Sat, 01 Dec 2012 19:08:13 +0000</pubDate>
		<dc:creator>fredsix</dc:creator>
		<guid isPermaLink="false">http://fredsix.wordpress.com/?p=130</guid>
		<description></description>
		<content:encoded><![CDATA[In this post I will discuss the Order Limit Theorem and it's slight generalization using the notion of "eventually".

First, the Order Limit Theorem.

<strong>Order Limit Theorem: </strong>Assume $latex (a_n) \rightarrow a$, $latex (b_n) \rightarrow b$. Then:
<ol>
	<li>If $latex \forall n a_n \geq 0$ then $latex a \geq 0$.</li>
	<li>If $latex \forall n a_n \geq b_n$ then $latex a \geq b$.</li>
	<li>If there's a $latex c \in \mathbb{R}$ for which $latex \forall n a_n \geq c$, then $latex a \geq c$. Ditto for the dual case of $latex a_n \leq c$.</li>
</ol>
<em>Proof: </em>(1) If each term of $latex (a_n)$ is nonnegative, then the limit $latex a$ couldn't possibly be negative because if it were, then you  could take $latex \epsilon = |a|$ and not be able to find any terms of $latex (a_n)$ within the $latex \epsilon$-ball (since each term is at least zero).

(2) If for each $latex n$, $latex a_n \geq b_n$, then since these two sequences converge, we can form the sequence $latex (a_n - b_n)$ which converges to $latex a - b$ by the Algebraic Limit Theorem. Each term of this new sequence is greater than zero, so by (1) $latex a - b &gt; 0$, or $latex a &gt; b$.

(3) We can make a sequence $latex (c_n)$ where $latex c_n = c$ for all $latex n$. Then apply (2) to get $latex a \geq c$ (or $latex a \leq c$ if that's how you roll). QED.

We need thisdefinition:

A sequence $latex (a_n)$ is <strong>eventually</strong> in set A if there's a point $latex N$ after which terms of $latex (a_n)$ are all in $latex A$ (i.e. $latex n \geq N \implies a_n \in A$).

I'm a big fan of decomposing definitions, and you can see that in some sense this defintion should come prior to the definition of the limit of a sequence. Let's refactor the definition of a limit:

The <strong>limit </strong>of a sequence $latex (a_n)$ is a number $latex x$ such that, for any $latex \epsilon &gt; 0$, the sequence is eventually in $latex (x - \epsilon, x + \epsilon)$.

And now for the crown jewel:

<strong>Slightly Generalized Order Limit Theorem: </strong>Assume $latex (a_n) \rightarrow a$, $latex (b_n) \rightarrow b$. Then:
<ol>
	<li>If $latex \exists N \forall n \geq N a_n \geq 0$ then $latex a \geq 0$.</li>
	<li>If $latex \exists N \forall n \geq N a_n \geq b_n$ then $latex a \geq b$.</li>
	<li>If there's a $latex c \in \mathbb{R}$ for which $latex \exists N \forall n \geq N a_n \geq c$, then $latex a \geq c$. Ditto for the dual case of $latex a_n \leq c$.</li>
</ol>
<em>Proof<strong>: </strong></em>(1) Suppose $latex a &lt; 0$. As before, we can take $latex \epsilon = |a|$. Then $latex (a_n)$ can not eventually get inside $latex (a - \epsilon, a + \epsilon)$ because after $latex N$, each $latex a_n$ is nonnegative. So $latex a \geq 0$.

(2) Use (1) as above.

(3) Use (2) as above.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>130</wp:post_id>
		<wp:post_date>2012-12-01 19:08:13</wp:post_date>
		<wp:post_date_gmt>2012-12-01 19:08:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>eventually-the-order-limit-theorem</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[25949232]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>superawesome</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1354388895]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>&quot;Psychic lottery&quot; set cover problem</title>
		<link>http://fredsix.wordpress.com/2012/12/01/psychic-lottery-set-cover-problem/</link>
		<pubDate>Sat, 01 Dec 2012 23:25:02 +0000</pubDate>
		<dc:creator>fredsix</dc:creator>
		<guid isPermaLink="false">http://fredsix.wordpress.com/?p=139</guid>
		<description></description>
		<content:encoded><![CDATA[Reading "Algorithm Design Manual", section 1.6 has a story about an interesting special case of the set cover problem. These are my notes on what the problem is and a potential solution (I have not fully read the text yet)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>139</wp:post_id>
		<wp:post_date>2012-12-01 23:25:02</wp:post_date>
		<wp:post_date_gmt>2012-12-01 23:25:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>psychic-lottery-set-cover-problem</wp:post_name>
		<wp:status>trash</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>superawesome</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[25949232]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
			<wp:meta_value><![CDATA[draft]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
			<wp:meta_value><![CDATA[1354503424]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>(ADM) Ex 2-44 - Backup scheme</title>
		<link>http://fredsix.wordpress.com/2012/12/03/adm-ex-2-44-backup-scheme/</link>
		<pubDate>Mon, 03 Dec 2012 00:01:12 +0000</pubDate>
		<dc:creator>fredsix</dc:creator>
		<guid isPermaLink="false">http://fredsix.wordpress.com/?p=140</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>We have 1,000 data items to store on 1,000 nodes. Each node can store copies of exactly three different items. Propose a replication scheme to minimize data loss as nodes fail. What is the expected number of data entries that get lost when three random nodes fail?</blockquote>
Let the number of items/nodes be $latex n$. If $latex n=3$ then we can have 3 backups of every item by storing a copy of each item on each node. We can do this again with $latex n=4$ by sticking each item on 3 of the nodes. like such:
<pre>abc
abd
acd
bcd</pre>
Notice that this is also the list of 3-combinations of $latex left{ {a,b,c,d} right}$]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>140</wp:post_id>
		<wp:post_date>2012-12-03 00:01:12</wp:post_date>
		<wp:post_date_gmt>2012-12-03 00:01:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adm-ex-2-44-backup-scheme</wp:post_name>
		<wp:status>trash</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>superawesome</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[25949232]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
			<wp:meta_value><![CDATA[draft]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
			<wp:meta_value><![CDATA[1354503383]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Open and Closed sets</title>
		<link>http://fredsix.wordpress.com/2012/12/05/open-and-closed-sets/</link>
		<pubDate>Wed, 05 Dec 2012 01:41:45 +0000</pubDate>
		<dc:creator>fredsix</dc:creator>
		<guid isPermaLink="false">http://fredsix.wordpress.com/?p=144</guid>
		<description></description>
		<content:encoded><![CDATA[In a metric space, an <strong>open ball around a </strong>is a set of elements that are <em>less than</em> a distance $latex \epsilon$ from some point $latex a$, i.e. the set $latex \left\{{x : d(x,a) &lt; \epsilon}\right\}$. Since I'm interested in $latex \mathbb{R}$ in particular, using the standard distance metric, this definition becomes: a set $latex \left\{{x \in \mathbb{R} : |x-a| &lt; \epsilon}\right\}$. We also say that it's an $latex \epsilon$-ball around $latex a$ or an $latex \epsilon$-neighborhood.

A set is <strong>open</strong> if every point in the set has an $latex \epsilon$-ball that fits inside the set.

Here's an important fact about open sets, which forms the basis of topological spaces!

<strong>Theorem: </strong>(1) Arbitrary unions of open sets are open. (2) Finite intersections of open sets are open.

<em>Proof: </em>(1) Given some family $latex \mathcal{F}$ of subsets of $latex \mathbb{R}$, $latex A = \bigcup \mathcal{F}$ is open because $latex a \in A$ must be in one of the sets, call it $latex U$, of $latex \mathcal{F}$, and since $latex U$ is open, there's an open ball contained in $latex U$, hence also in $latex A$.

(2) If $latex \left\{{U_1, \ldots, U_n}\right\}$ are open sets, then $latex S = \bigcap_{i = 1}^{n} U_i$ must be open, for if you take arbitrary $latex s \in S$, then it's in every $latex U_i$, so there's some open ball $latex O_i$ that's inside each $latex U_i$. Take the smallest open ball, $latex O_k$, and it's in every $latex U_i$, so it's in $latex S$ as well. QED.

Why can't we say that arbitrary intersections of open sets are open too? Where does the proof of (2) fail if we have an infinite family of open sets? It really consists in the fact that we have an infinite set of open ball radii, $latex C$, we aren't guaranteed to be able to find a minimum element.

Here's an important definition: a <strong>limit point </strong>of set $latex A$ is an element $latex x \in \mathbb{R}$ for which every open ball around $latex x$ contains a point of $latex A - \left\{{x}\right\}$. A limit point is an element which is <em>approximable </em>by elements of $latex A$ distinct from $latex x$ (in the sense that you can make a sequence of elements of $latex A$ that converge to $latex x$ (and that aren't just the constant sequence $latex (x, x, x, \ldots)$.)

Here's that promised theorem about limit points and sequences that converge to them:

<strong>Theorem: </strong>$latex x$ is a limit point of $latex A$ iff there's a sequence $latex (a_n) \rightarrow x$ and each $latex a_n \in A - \left\{{x}\right\}$.

<em>Proof:</em> $latex (\Rightarrow)$ if $latex x$ is a limit point then we can take the $\latex \epsilon$-balls for $latex \epsilon_n = \frac{1}{n}$. Inside each $latex \epsilon_n$ we have some $latex a \in A, a \neq x$, so set $latex a_n = a$. This constructs a sequence of elements of $latex A - \left\{{x}\right\}$ that converges to $latex x$.

$latex (\Leftarrow)$ If theres a sequence $latex (a_n) \rightarrow x$ contained in $latex A - \left\{{x}\right\}$ that converges to $latex x$, then any $latex \epsilon$-ball around $latex x$ contains elements of $latex A - \left\{{x}\right\}$ because for every $latex \epsilon$ there's a point in the sequence after which terms of the sequence are all within the $latex \epsilon$-ball around $latex x$. But terms of the sequence are elements of $latex A$ that are not equal to $latex x$ (by hypothesis), so $latex x$ is a limit point. QED]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>144</wp:post_id>
		<wp:post_date>2012-12-05 01:41:45</wp:post_date>
		<wp:post_date_gmt>2012-12-05 01:41:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>open-and-closed-sets</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>superawesome</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[25949232]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1354671705]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Vector spaces and linear independence</title>
		<link>http://fredsix.wordpress.com/2012/12/06/vector-spaces-and-linear-independence/</link>
		<pubDate>Thu, 06 Dec 2012 04:38:55 +0000</pubDate>
		<dc:creator>fredsix</dc:creator>
		<guid isPermaLink="false">http://fredsix.wordpress.com/?p=159</guid>
		<description></description>
		<content:encoded><![CDATA[If you go back to my earlier post in November 2012  (which I am too lazy to link to), you will find that I talked about fields already. So I will briefly restate:

A <strong>field </strong>is a non-trivial commutative ring where every non-zero element has a multiplicative inverse.

A <strong>vector space </strong>is a triplet $latex (F, V, \ast: F \times V \rightarrow V)$ where $latex F$ is a field, $latex V$ is an abelian group, $latex (V, \ast$ is a <a href="http://en.wikipedia.org/wiki/Group_with_operators">group with operators</a> (i.e. currying $latex \ast$ with each $latex f \in F$ yields a group endomorphism on $latex V$) and where the following three postulates hold:
<ol>
	<li>$latex (a + b) \ast v = a \ast v + b \ast v$</li>
	<li>$latex (ab) \ast v = a \ast (b \ast v)$</li>
	<li>$latex 1 \ast v = v$</li>
</ol>
(Interestingly, the last 2 properties say that $latex \ast$ is a monoid action of $latex F$ on $latex V$ (since the multiplication operation is a monoid in a field).)

The elements of the field $latex F$ are called <strong>scalars</strong>.

If you take some set $latex x_1, \ldots, x_n$ of vectors and some corresponding set $latex a_1, \ldots, a_n$ of scalars, and form the sum of products $latex a_1 x_1 + \cdots + a_n x_n$, this result is called a <strong>linear combination</strong> of the vectors.

Now, a set of vectors $latex \left\{{x_i}\right\}$ is <strong>linearly dependent </strong>if there exists a set $latex \left\{{a_i}\right\}$ of scalars for which one of the scalars $latex a_k$ is nonzero and $latex \Sigma_i a_i x_i = 0$. A set is <strong>linearly independent</strong> if $latex \Sigma_i a_i x_i = 0$ implies $latex a_i = 0$ for all $latex i$. That is, linearly independent means that the only way for a linear combination of the vectors to result in the zero vector is for all the scalars to be zero.

(I'm going off of Halmos for this, and he does something a bit strange by defining linear independence vacuously as well. So the empty set is linearly independent vacuously because it cannot possibly be linearly dependent (there is no non-zero scalar to be found)).

This is a pretty abstract definition (why do we care about how to get zero from linear combinations?), but the importance is revealed by the following lemma:

<strong>Lemma:</strong> If the set of vectors $latex \left\{{x_i}\right\}$ is linearly independent then $latex x$ is a linear combination of the $latex \left\{{x_i}\right\}$ iff $latex \left\{{x}\right\} \cup \left\{{x_i}\right\}$ is linearly dependent.

<em>Proof: </em>Supposing the $latex x_i$'s are linearly independent, then if $latex x$ is a linear combination of them, then for some set of $latex b_i$'s, $latex x = \Sigma_i b_i x_i$. So we can take $latex b = -1$ and get $latex b x + \Sigma_i b_i x_i = 0$ and at least one of the scalars is nonzero, proving that adding $latex x$ to the $latex x_i$'s makes the new set linearly dependent.

For the converse, assume that the $latex x$ plus $latex x_i$'s are linearly dependent. So either $latex b \neq 0$ or some $latex b_k \neq 0$ for $latex b x + \Sigma_i b_i x_i = 0$. If $latex b \neq 0$ then we can divide the whole equation out by $latex b$ and subtract the linear combination of $latex x_i$'s to the other side, which expresses $latex x$ as a linear combination of the $latex x_i$'s (which is what we're trying to find). So suppose that $latex b = 0$ and that some $latex b_k \neq 0$ instead. We have:

$latex bx + \Sigma_i b_i x_i = 0 + \Sigma_i b_i x_i =\Sigma_i b_i x_i = 0$

And $latex b_k \neq 0$, so the $latex \left\{{x_i}\right\}$ is linearly dependent, contrary to our first assumption. So $latex b \neq 0$ and $latex x$ is a linear combination of the $latex x_i$'s. QED.

Actually, we didn't need that lemma to see the significance of the "linearly dependent" definition, because the key idea is that, with a linearly dependent set, some linear combination of the vectors with one of the scalars nonzero, call it $latex b$, results in the zero vector, so we can divide the equation by $latex -b$ to express one of the vectors as a linear combination of the others. That's really the main point: we could throw away one of the vectors and still not miss it (due to being able to reconstruct it as a linear combination of the others).

To round out this post I will finish with what Halmos calls "the  fundamental result concerning linear dependence":

<strong>Theorem: </strong>The n-tuple $latex (x_1, \ldots, x_n)$ is linearly dependent iff there's some $latex k$, $latex 2 \leq k \leq n$ for which $latex x_k$ is a linear combination of $latex \left\{{x_1, \ldots, x_{k-1}}\right\}$.

<em>Proof: </em>$latex (\Rightarrow)$ If $latex (x_1, \ldots, x_n)$ is linearly dependent, then pick the smallest $latex k$ such that $latex x_1, \ldots, x_k$  is linearly dependent (we could, at the very least, select $latex k=n$. Since the set of all $latex j$ such that $latex x_1, \ldots, x_j$ is linearly dependent is nonempty, by the well-ordering principle it has a smallest element.) $latex \left\{{x_1, \ldots, x_{k-1}}\right\}$ must be linearly independent, for if it were otherwise, it would contradict $latex k$ being smallest. In addition, adding $latex x_k$ to it makes it linearly dependent, so $latex x_k$ must be a linear combination of the preceding elements by the lemma above.

$latex (\Leftarrow)$ Clearly the converse holds. If one of the $latex x_k$ is a linear combination of the preceding vectors, then we can obtain zero with $latex \Sigma_{i=1}^{k} (a_i x_i) - x + \Sigma_{i=k+1}^{n} 0 x_i$.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>159</wp:post_id>
		<wp:post_date>2012-12-06 04:38:55</wp:post_date>
		<wp:post_date_gmt>2012-12-06 04:38:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>vector-spaces-and-linear-independence</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[25949232]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>superawesome</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1354768737]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Basii</title>
		<link>http://fredsix.wordpress.com/2012/12/09/basii/</link>
		<pubDate>Sun, 09 Dec 2012 04:41:46 +0000</pubDate>
		<dc:creator>fredsix</dc:creator>
		<guid isPermaLink="false">http://fredsix.wordpress.com/?p=183</guid>
		<description></description>
		<content:encoded><![CDATA[This post is about bases of vector spaces and a crucial property of them: that every linearly independent set of vectors can be extended to a basis (and, thus, that every vector space has a basis). There are two sides to this, actually: there's an easy proof that's restricted to finite dimensional vector spaces, and then there's the general proof for arbitrary vector spaces that uses Zorn's Lemma. I will cover both, because the infinite case is not too hard and rather fun.

<strong>Definition: </strong>The <strong>span</strong> of a set of vectors is the set of all linear combinations of the vectors.

<strong>Definition: </strong>A <strong>basis</strong> for a vector space $latex V$ is a linearly independent set $latex B$ for which $latex span B = V$.

<strong>Definition: </strong>A vector space is <strong>finite-dimensional </strong>if a finite basis exists for it.

<strong>Lemma/Theorem/whatever: </strong>A given basis  $latex B$ determines unique set of coefficients for each $lavex v \in V$ such that $latex v = \Sigma_i \alpha_i b_i$.

<em>Proof: </em>if $latex v = \Sigma_i \alpha_i b_i = \Sigma_i \xi_i b_i$, then $latex 0 = \Sigma_i (\alpha_i - \xi_i) b_i$. Since $latex B$ is a basis, it's linearly independent, so each $latex \alpha_i - \xi_i = 0$, aka $latex \alpha_i = \xi_i$. QED

Another way of looking (at this is as saying that the function defined from basis set (bases n-tuple, really) to n-tuple of linear combination coefficients is well-defined.

<strong>Theorem: </strong>In a finite-dimensional vector space $latex V$, any linearly independent set $latex A = \left\{{y_1, \ldots, y_k}\right\}$ can be extended to a basis $latex \left\{{y_1, \ldots, y_k, y_{k+1}, \ldots, y_n}\right\} for $latex V$.

<em>Fake Proof:</em>  If $latex A$ is a basis, we're done. Otherwise, some vector $latex v_1 \in V$ is not a linear combination of $latex A$, so set $latex A_1 = A \cup \left\{{v_1}\right\}$. Now repeat; if $latex A_1$ is a basis, we're done, otherwise we can find a $latex v_2$ which is not a linear combination of $latex A_1$. Since $latex V$ is finite dimensional, this construction will eventually find a basis. QED.

Why does the fake proof not work? It's actually fine up to the last line, and it would work if we knew that every basis for a vector space was the same size. (To expand on this: "finite-dimensional" at this point simply means that there's some set for which every vector in $latex V$ is a linear combination of the set. We know there's one such set, but we have no information about what happens when we string together another collection of linearly independent vectors of the same size as the basis.) Since we have not yet proved this, we must resort to a different proof:

<em>Proof:  </em>Since our previous strategy of adding vectors failed because we couldn't guarantee that it would terminate, we will try the opposite strategy: we have a basis $latex \left\{{x_1, \ldots, x_n}\right\}$, so let's add <em>too many</em> vectors to begin, and take them out until the set is linearly indepenent again.

So we take our linearly independent set $latex \left\{{y_1, \ldots, y_k}\right\}$ and the basis and smash them together into a tuple: $latex \left\{{y_1, \ldots, y_k, x_1, \ldots, x_n}\right\}$. This set of vectors is linearly dependent (each $latex y$ is a linear combination of the basis elements), so by the theorem we proved in the last post, there's one element which is a linear combination of the preceding elements. Furthermore, it can't be one of the $latex y_i$'s, because those are linearly independent. So there's some $latex j$ such that $latex x_j$ is in the span of $latex A \cup \left\{{x_1, \ldots, x_{j-1}}\right\}$.

The idea is to just remove that $latex x_j$, resulting in $latex y_1, \ldots, y_k, x_1, \ldots, x_{j-1}, x_{j+1}, \ldots, x_n$. This set still spans $latex V$ because any vector requiring a nonzero coefficient of $latex x_j$ can just use the linear combination to substitute for $latex x_j$. Keep removing basis elements until the set is no longer linearly dependent. At each step, the span never changes, so the result is a basis. QED.

That was instructive, but let's go for the general case. Halmos indicates that this requires "transfinite trickery", but I'm not so certain about that..

<strong>Theorem: </strong>Every vector space has a basis.

<em>Proof: </em>We need an initial result -- the Kuratowski/Zorn Lemma -- which says:

<em>Kuratowski/Zorn Lemma: </em>For any poset $latex P$, if every chain (totally ordered subset) is bounded above, then $latex P$ has a maximal element.

Now take the set $latex \mathcal{L}$ of all linearly independent subsets of $latex V$. This is a poset by set inclusion. For any chain $latex \mathcal{C}$ in $latex \mathcal{L}$, the union $latex \bigcup \mathcal{C}$ is in $latex \mathcal{L}$ because, for any finite subset $latex A$ of $latex \bigcup \mathcal{C}$, there's a linearly independent set $latex C$ for each $latex a \in A$ that (1) contains $latex a$ and (2) is in $latex \mathcal{C}$. Since it's a chain, the biggest of these chains actually contains all elements of $latex A$. So every finite subset of $latex \bigcup \mathcal{C}$ is linearly independent, hence the union is independent. So the union is clearly an upper bound in $latex \mathcal{L}$. So it satisfies the premises for K/L, and hence $latex \mathcal{L}$ has a maximal element $latex M$. This is linearly independent (it's in $latex \mathcal{L}$), so we simply need to prove that it spans $latex V$.

If $latex x \notin M$, we know that $latex X = M \cup \left\{{x}\right\}$ can't be linearly independent, because $latex M$ is maximal. So $latex X$ is linearly dependent, meaning that some finite subset $latex U$ is linearly dependent. $latex U$ must contain $latex x$, otherwise $latex U$ would be a subset of $latex M$, making $latex M$ not linearly independent. Furthermore $latex U - \left\{{x}\right\}$ is linearly independent, so by a theorem in the previous post, $latex x$ must be a linear combination of the $latex U - \left\{{x}\right\}$. Thus $latex x$ is in $latex span M$ after all. QED.

The Kuratowski/Zorn Lemma is equivalent to the Axiom of Choice. That's the price of great power.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>183</wp:post_id>
		<wp:post_date>2012-12-09 04:41:46</wp:post_date>
		<wp:post_date_gmt>2012-12-09 04:41:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>basii</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[25949232]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>superawesome</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1355028106]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
